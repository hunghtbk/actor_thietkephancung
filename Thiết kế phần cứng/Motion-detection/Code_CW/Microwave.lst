CCS PCM C Compiler, Version 4.107, 42851               07-Nov-12 17:52

               Filename: D:\data\lab\Motion-detection\Code\Microwave.lst

               ROM used: 279 words (3%)
                         Largest free fragment is 2048
               RAM used: 10 (2%) at main() level
                         26 (5%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLP  00
0001:  GOTO   0D0
0002:  NOP
*
0004:  CLRF   03
0005:  CLRF   0A
0006:  MOVLB  00
0007:  MOVF   77,W
0008:  MOVWF  20
0009:  MOVF   78,W
000A:  MOVWF  21
000B:  MOVF   79,W
000C:  MOVWF  22
000D:  MOVF   7A,W
000E:  MOVWF  23
000F:  BTFSS  0B.4
0010:  GOTO   013
0011:  BTFSC  0B.1
0012:  GOTO   023
0013:  CLRF   05
0014:  MOVLW  91
0015:  MOVWF  04
0016:  BTFSS  00.0
0017:  GOTO   01A
0018:  BTFSC  11.0
0019:  GOTO   025
001A:  MOVF   20,W
001B:  MOVWF  77
001C:  MOVF   21,W
001D:  MOVWF  78
001E:  MOVF   22,W
001F:  MOVWF  79
0020:  MOVF   23,W
0021:  MOVWF  7A
0022:  RETFIE
0023:  MOVLP  00
0024:  GOTO   030
0025:  MOVLP  00
0026:  GOTO   069
.................... //--------------------------------------------------------- 
.................... // date :08/08/2012 
.................... // author : Nguyen Hung 
.................... // mcu:PIC16f886 
.................... // clock:8Mhz 
.................... // descrip:Use with microwave_boad 
.................... //---------------------------------------------------------- 
....................  
.................... #include <Microwave.h> 
.................... #include <16F1936.h> 
.................... //////// Standard Header file for the PIC16F1936 device //////////////// 
.................... #device PIC16F1936 
.................... #list 
....................  
.................... #device *=16 
.................... #device adc=8 
.................... /* 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES PLL_SW                   //4X HW PLL disabled, 4X PLL enabled/disabled in software 
.................... #FUSES BORV27                   //Brownout reset at 2.7V 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT 
.................... */ 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES WDT_SW                 
.................... #FUSES NOCLKOUT               
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOVCAP                 
.................... #FUSES PLL_SW                    
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES BORV19                 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... //#use delay(clock=20000000) 
....................  
.................... #use delay(clock=8000000) 
....................  
.................... #use rs232(baud=19200,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
....................  
.................... //#use rs232(baud=19200,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
.................... //.........Defined........................................ 
.................... #word TMR1L = 0x016 
.................... #word TMR1H = 0x017 
.................... //--------------------------------------------------------- 
.................... #define MAX_PULSE_WIDTH 52500 //200Hz 
.................... #define MIN_PULSE_WIDTH 1250 //8Hz 
.................... #define FILTER_VALUE 1 
.................... //........variable......................................... 
.................... volatile char pulse_count; 
.................... //volatile unsigned int16 pulse_buff; 
.................... //---------------------------------------------------------- 
....................  
....................  
.................... //...........macro......................................... 
.................... // 
.................... void enable_timer1(void); 
.................... void disable_timer1(void); 
.................... void IDLE_MODE(void); 
.................... // 
.................... // 
.................... // 
.................... // 
.................... // 
.................... //---------------------------------------------------------- 
.................... //---------interrupt handle funtion------------------------- 
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
.................... unsigned int16 pulse_buff; 
.................... if(pulse_count == 0) 
*
0030:  MOVF   24,F
0031:  BTFSS  03.2
0032:  GOTO   03D
....................    { 
....................    enable_timer1(); 
....................    pulse_count++; 
*
003B:  INCF   24,F
....................    } 
.................... else 
003C:  GOTO   066
....................    { 
....................    pulse_buff = TMR1L|(TMR1H<<8); 
003D:  MOVLW  00
003E:  IORWF  16,W
003F:  MOVWF  28
0040:  MOVF   17,W
0041:  IORWF  17,W
0042:  MOVWF  29
....................    if(pulse_buff> MAX_PULSE_WIDTH || pulse_buff < MIN_PULSE_WIDTH) 
0043:  MOVF   29,W
0044:  SUBLW  CC
0045:  BTFSC  03.0
0046:  GOTO   04E
0047:  XORLW  FF
0048:  BTFSS  03.2
0049:  GOTO   058
004A:  MOVF   28,W
004B:  SUBLW  14
004C:  BTFSS  03.0
004D:  GOTO   058
004E:  MOVF   29,W
004F:  SUBLW  04
0050:  BTFSS  03.0
0051:  GOTO   05A
0052:  BTFSS  03.2
0053:  GOTO   058
0054:  MOVF   28,W
0055:  SUBLW  E1
0056:  BTFSS  03.0
0057:  GOTO   05A
....................       { 
....................         //  printf("t"); 
....................         //  printf("%lu",pulse_buff); 
....................         //  if(pulse_buff> MAX_PULSE_WIDTH)printf("[]"); 
....................           IDLE_MODE(); 
0058:  CALL   027
....................       } 
....................    else  
0059:  GOTO   066
....................       { 
....................       pulse_count++ ; 
005A:  INCF   24,F
....................       if(pulse_count>FILTER_VALUE)  
005B:  MOVF   24,W
005C:  SUBLW  01
005D:  BTFSC  03.0
005E:  GOTO   066
....................          { 
....................          printf("W"); 
005F:  MOVLW  57
0060:  BTFSS  11.4
0061:  GOTO   060
0062:  MOVLB  03
0063:  MOVWF  1A
....................          IDLE_MODE(); 
0064:  MOVLB  00
0065:  CALL   027
....................          } 
....................        
....................       } 
....................    } 
.................... } 
0066:  BCF    0B.1
0067:  MOVLP  00
0068:  GOTO   01A
.................... #INT_TIMER1 
.................... void TIMER1_handle(void) 
.................... { 
.................... //printf("c"); 
.................... IDLE_MODE(); 
0069:  CALL   027
.................... } 
....................  
....................  
006A:  BCF    11.0
006B:  MOVLP  00
006C:  GOTO   01A
.................... void main() 
.................... { 
*
00D0:  CLRF   05
00D1:  CLRF   04
00D2:  MOVLW  1F
00D3:  ANDWF  03,F
00D4:  MOVLW  19
00D5:  MOVLB  03
00D6:  MOVWF  1B
00D7:  MOVLW  A6
00D8:  MOVWF  1E
00D9:  MOVLW  90
00DA:  MOVWF  1D
00DB:  MOVLB  0F
00DC:  CLRF   11
00DD:  CLRF   12
00DE:  CLRF   18
00DF:  CLRF   19
00E0:  CLRF   1A
00E1:  MOVLW  00
00E2:  MOVLB  03
00E3:  MOVWF  0D
00E4:  BCF    10.0
00E5:  BCF    10.1
00E6:  BCF    10.2
00E7:  MOVLB  01
00E8:  BCF    1E.0
00E9:  BCF    1E.1
00EA:  MOVLB  03
00EB:  MOVWF  0C
00EC:  MOVLB  01
00ED:  CLRF   17
00EE:  MOVLW  07
00EF:  MOVWF  1C
....................    setup_comparator(NC_NC_NC_NC);// This device COMP currently not supported by the PICWizard 
00F0:  CLRF   17
00F1:  MOVLW  07
00F2:  MOVWF  1C
00F3:  MOVF   05,W
00F4:  MOVWF  05
00F5:  MOVLW  06
00F6:  MOVWF  77
00F7:  DECFSZ 77,F
00F8:  GOTO   0F7
00F9:  NOP
00FA:  MOVF   1C,W
00FB:  MOVLB  00
00FC:  BCF    12.5
....................    enable_interrupts(INT_EXT); 
00FD:  BSF    0B.4
....................    enable_interrupts(GLOBAL); 
00FE:  MOVLW  C0
00FF:  IORWF  0B,F
....................    enable_interrupts(INT_TIMER1); 
0100:  MOVLB  01
0101:  BSF    11.0
....................    ext_int_edge( H_TO_L );   // Sets up EXT 
0102:  BCF    15.6
....................    setup_timer_1 ( T1_DISABLED ); 
0103:  MOVLB  02
0104:  BCF    1D.5
0105:  MOVLB  00
0106:  CLRF   18
0107:  CLRF   19
....................    printf("NguyenHung \n \r DT5 - K53 - DHBKHN \n \r"); 
0108:  MOVLW  6D
0109:  MOVLB  03
010A:  MOVWF  11
010B:  MOVLW  00
010C:  MOVWF  12
010D:  MOVLB  00
010E:  CALL   08A
....................    printf("Ready to use !! \n\r "); 
010F:  MOVLW  80
0110:  MOVLB  03
0111:  MOVWF  11
0112:  MOVLW  00
0113:  MOVWF  12
0114:  MOVLB  00
0115:  CALL   08A
....................  
.................... while(true) 
....................    { 
....................     
....................    } 
0116:  GOTO   116
.................... } 
....................  
.................... //------------------------------------------------------------- 
.................... void enable_timer1(void) 
.................... { 
0117:  SLEEP
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);      //32.7 ms overflow 
*
0033:  MOVLB  02
0034:  BCF    1D.5
0035:  MOVLW  35
0036:  MOVLB  00
0037:  MOVWF  18
0038:  CLRF   19
....................    set_timer1(0);                               //this sets timer1 register to 0 
0039:  CLRF   17
003A:  CLRF   16
.................... } 
....................  
.................... void disable_timer1(void) 
.................... { 
....................    set_timer1(0);  
*
0027:  CLRF   17
0028:  CLRF   16
....................    setup_timer_1 ( T1_DISABLED ); 
0029:  MOVLB  02
002A:  BCF    1D.5
002B:  MOVLB  00
002C:  CLRF   18
002D:  CLRF   19
.................... } 
.................... void IDLE_MODE(void) 
.................... { 
....................    disable_timer1 (); 
....................    pulse_count =0; 
002E:  CLRF   24
....................   // pulse_buff =0; 
.................... } 
002F:  RETURN

Configuration Fuses:
   Word  1: 39EA   HS NOPUT NOPROTECT MCLR NOCPD NOBROWNOUT IESO FCMEN WDT_SW NOCLKOUT
   Word  2: 1EFF   NOWRT NOVCAP PLL_SW STVREN BORV19 NOLVP NODEBUG
